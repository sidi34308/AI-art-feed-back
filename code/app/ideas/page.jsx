"use client";
import { useState } from "react";
import Lottie from "lottie-react";
import animationData from "@/public/ARTIST_S_AI.json";
import FootBar from "../components/FooterBar";
import Header from "../components/Header";

const IdeaPage = () => {
  const [idea, setIdea] = useState("");
  const [loading, setLoading] = useState(false);
  const [field, setField] = useState("");
  const [famousPerson, setFamousPerson] = useState("");
  const [keywords, setKeywords] = useState("");

  const fetchIdea = async () => {
    setLoading(true);
    const prompt = `Generate one drawing idea, short in one sentence in English, make sure it is for a meaningful drawing or painting in the field of ${field} ${
      famousPerson ? "and involving " + famousPerson : ""
    } with keywords: ${keywords}`;

    try {
      const response = await fetch("/api/ideas", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ prompt }),
      });

      if (!response.ok) {
        throw new Error("Failed to fetch idea");
      }

      const result = await response.json();

      if (result.idea) {
        displayIdea(result.idea);
      } else {
        console.error("No idea returned in the response");
      }
    } catch (error) {
      console.error("Error fetching idea:", error);
      setLoading(false); // Set loading to false in case of error
    }
  };

  const displayIdea = (text) => {
    if (!text) return;

    let index = 0;
    setIdea(""); // Reset idea before displaying new one
    const interval = setInterval(() => {
      setIdea((prev) => prev + text[index]);
      index++;
      if (index === text.length) {
        clearInterval(interval);
        setLoading(false); // Set loading to false after displaying the idea
      }
    }, 100); // Adjust the interval duration as needed
  };

  return (
    <section className="w-full flex flex-col justify-center items-center h-auto bg-black text-white mt-20 mb-32">
      <Header />
      <div className="p-8 rounded-lg shadow-lg max-w-5xl w-full">
        <div className="flex flex-col justify-center gap-6">
          <div>
            <h1 className="text-2xl flex sm:text-3xl font-bold gap-2">
              Generate Art Ideas
              <span className="text-[#5b7cf5]"> using AI</span>
            </h1>
            <p className="mt-2 paragraph">
              Get inspired with unique and meaningful drawing or painting ideas
              generated by AI
            </p>
          </div>

          <label>Choose your field of art</label>

          <select
            value={field}
            onChange={(e) => setField(e.target.value)}
            className="w-full p-2 rounded-xl bg-[#181818] text-white"
          >
            <option value="">Select Field of Art</option>
            <option value="random">Random</option>
            <option value="portrait">Portrait</option>
            <option value="landscape">Landscape</option>
            <option value="abstract">Abstract</option>
            <option value="still life">Still Life</option>
            <option value="concept art">Concept Art</option>
            <option value="other">Other</option>
          </select>
          <label>Provide keywords to receive better results</label>

          <input
            type="text"
            value={keywords}
            onChange={(e) => setKeywords(e.target.value)}
            placeholder="Enter keywords (optional)"
            className="w-full p-2 rounded-lg bg-[#181818] text-white"
          />

          <button
            className="py-3 px-6 flex gap-2 items-center justify-center bg-blue-500 rounded-lg text-white font-bold hover:bg-blue-600 transition duration-300 ease-in-out cssbuttons-io"
            onClick={fetchIdea}
            disabled={loading} // Disable the button when loading is true
          >
            <span>
              Suggest an Idea
              <svg
                className="m-1 w-5 h-5"
                viewBox="0 0 46 36"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15.5 7L18.5535 14.7423C18.8354 15.457 18.9763 15.8143 19.1921 16.1156C19.3834 16.3827 19.6172 16.6166 19.8844 16.8079C20.1857 17.0237 20.543 17.1646 21.2578 17.4465L29 20.5L21.2578 23.5535C20.543 23.8354 20.1857 23.9763 19.8844 24.1921C19.6172 24.3834 19.3834 24.6172 19.1921 24.8844C18.9763 25.1857 18.8354 25.543 18.5535 26.2578L15.5 34L12.4465 26.2578C12.1646 25.543 12.0237 25.1857 11.8079 24.8844C11.6166 24.6172 11.3827 24.3834 11.1156 24.1921C10.8143 23.9763 10.457 23.8354 9.74229 23.5535L2 20.5L9.74229 17.4465C10.457 17.1646 10.8143 17.0237 11.1156 16.8079C11.3827 16.6166 11.6166 16.3827 11.8079 16.1156C12.0237 15.8143 12.1646 15.457 12.4465 14.7423L15.5 7Z"
                  stroke="#fff"
                  strokeWidth="3"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <path
                  d="M35.5 1L37.6488 6.44828C37.8471 6.95121 37.9463 7.20268 38.0981 7.41472C38.2327 7.60267 38.3973 7.76723 38.5853 7.90185C38.7973 8.0537 39.0488 8.15288 39.5518 8.35123L45 10.5L39.5518 12.6488C39.0488 12.8471 38.7973 12.9463 38.5853 13.0981C38.3973 13.2327 38.2327 13.3973 38.0981 13.5853C37.9463 13.7973 37.8471 14.0488 37.6488 14.5518L35.5 20L33.3512 14.5518C33.1529 14.0488 33.0537 13.7973 32.9018 13.5853C32.7672 13.3973 32.6027 13.2327 32.4147 13.0981C32.2027 12.9463 31.9512 12.8471 31.4483 12.6488L26 10.5L31.4483 8.35123C31.9512 8.15288 32.2027 8.0537 32.4147 7.90185C32.6027 7.76723 32.7672 7.60267 32.9018 7.41472C33.0537 7.20268 33.1529 6.95121 33.3512 6.44828L35.5 1Z"
                  fill="#fff"
                  stroke="#fff"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </span>
          </button>
        </div>
        {loading ? (
          <div className="flex justify-center items-center mt-6">
            <div className="w-full bg-[#2e2e2e] animate-pulse h-20 rounded-xl min-h-20">
              {/* Skeleton effect: background color and pulse animation */}
            </div>
          </div>
        ) : (
          <div className="mt-6 bg-[#181818] p-4 rounded-xl min-h-20">
            <p className="text-lg">{idea}</p>
          </div>
        )}
      </div>
      <FootBar />
    </section>
  );
};

export default IdeaPage;
